{
    "collab_server" : "",
    "contents" : "library(ggplot2)\nlibrary(ggthemes)\nlibrary(dplyr)\nlibrary(tidyr)\nload(\"tidy_data_fin.RData\")\n#################\n\n# Change putcall labels to full words for facets\ntidy_data$putcall <- sub(\"^p$\", \"Put\", tidy_data$putcall) \ntidy_data$putcall <- sub(\"^c$\", \"Call\", tidy_data$putcall)\n# tidy_data$putcall <- sub(\"^Put$\", \"p\", tidy_data$putcall) \n# tidy_data$putcall <- sub(\"^Call$\", \"c\", tidy_data$putcall)\nvolatility_smile$putcall <- sub(\"^p$\", \"Put\", volatility_smile$putcall) \nvolatility_smile$putcall <- sub(\"^c$\", \"Call\", volatility_smile$putcall)\n\nimage_size <- 240\n\n###########################\n##### QUESTION 1 ##########\n###########################\n\n# Define paramaters\nopt_prices = 5\n\n# Function to calculate profit\nprofit <- function(x, fixed_cost = opt_prices) {\n    ifelse(x < 40,\n           40 - x - fixed_cost, \n           ifelse(x > 45,\n                  x -  45 - fixed_cost,\n                  - fixed_cost))\n}\n\n# Plot\nrange <- data.frame(x = 30:55)\ngg <- ggplot(range, aes(x)) +\n    stat_function(fun = profit, size = 1.5) +\n    labs(x = \"Final Stock Price\", y = \"Profit\") +\n    geom_vline(xintercept = 40, linetype = 2, alpha = 0.5) +\n    geom_vline(xintercept = 45, linetype = 2, alpha = 0.5) +\n    annotate(\"text\", x = mean(c(min(range), 40)), y = 4.5, \n             label = \"Put option \\n in the money\") +\n    annotate(\"text\", x = mean(c(max(range), 45)), y = 4.5, \n             label = \"Call option \\n in the money\") +\n    theme_few()\n\njpeg(file = \"../Plots/Q1_1.jpg\", width = image_size, height = image_size)\ngg\ndev.off()\n\n###########################\n##### QUESTION 2 ##########\n###########################\n\n# Graph 1 - Plot underlying asset + historic volatility\n#######################################################\ndat <- dplyr::filter(tidy_data, id == \"c3125\") %>%\n    dplyr::select(date, volatility, asset_value) %>%\n    gather(value, stat, -date)\ngg <- ggplot(data = dat, aes(x = date, y = stat)) + \n    geom_line() + \n    facet_wrap(~value, nrow = 2, scales = \"free_y\") +\n    ylab(\"\") +\n    ggthemes::theme_few()\ngg\n\njpeg(file = \"../Plots/Q2_1.jpg\", width = image_size, height = image_size)\ngg\ndev.off()\n\n\n\n# Plot estimated vs observed for each stock\ngg <- ggplot(tidy_data, aes(x = date, y = fOption_estimate - option_price, )) +\n    geom_line() +\n    facet_wrap(~id, nrow = 2) +\n    geom_hline(yintercept = 0, linetype = \"dotted\") +\n    #lims(x = c(0,450), y = c(0,450)) +\n    labs(x = \"Observed Option Price\", y = \"Estimated Option Price\") + \n    theme_few() + \n    scale_colour_continuous(low = \"black\")\ngg\n\njpeg(file = \"../Plots/Q2_2.jpg\", width = image_size*2, height = image_size)\ngg\ndev.off()\n\n# Summary data\nse <- function(x) sqrt(var(na.omit(x))/length(na.omit(x)))\nsum_dat <- tidy_data %>% group_by(id) %>% \n    summarise(err = mean(fOption_estimate - option_price, na.rm = T),\n              err_se = se(fOption_estimate - option_price),\n              putcall = sample(putcall, 1),\n              strike = sample(strike_price, 1))\n\ngg <- ggplot(sum_dat, aes(x = strike, y = err)) +\n    geom_errorbar(aes(ymin = err - 2*err_se, ymax = err + 2*err_se), width = 20) +\n    geom_point() +\n    facet_wrap(~putcall, nrow = 1) + \n    geom_hline(yintercept = 0, linetype = \"dotted\") +\n    theme_few() + \n    ylab(\"Error\") +\n    xlab(\"Strike Price\")\ngg\n\njpeg(file = \"../Plots/Q2_3.jpg\", width = image_size* 2, height = image_size)\ngg\ndev.off()\n\n#\ngg <- ggplot(tidy_data, aes(x = date, y = in_the_money)) + \n    facet_wrap(~id, nrow = 2) + \n    geom_line() +\n    theme_few() +\n    ylab(\"probability in the money\")\ngg\n\njpeg(file = \"../Plots/Q2_4.jpg\", width = image_size* 3, height = image_size)\ngg\ndev.off()\n###########################\n##### QUESTION 3 ##########\n###########################\n\n# Plot estimated vs observed for each stock\ngg <- \n    ggplot(data = tidy_data,\n           mapping = aes(x = volatility, y = fOption_implied, colour = date)) +\n    geom_point() + \n    facet_wrap(~id, nrow = 2) +\n    geom_abline(intercept = 0, slope = 1, linetype = \"dotted\") +\n    xlim(c(0,.3)) + ylim(c(0,.2)) +\n    labs(x = \"Historic Volatility\", y = \"Implied Volatility\") +\n    theme_few()\ngg\n\njpeg(file = \"../Plots/Q3_1.jpg\", width = image_size* 2, height = image_size)\ngg\ndev.off()\n\n# Are there systematic differences between options of different strike prices on any particular day. \"Volatility Smile\".\ngg <- \n    ggplot(data = volatility_smile, mapping = aes(x = strike, y = av_implied, colour = putcall)) +\n    geom_point() +\n    geom_errorbar(aes(ymin = av_implied - 2*se_implied, ymax = av_implied + 2*se_implied)) +\n    #acet_wrap(~putcall, nrow = 2, scales = \"free\") +\n    labs(x = \"Strike Price\", y = \"Implied Volatility\") +\n    theme_few() +\n    scale_color_grey()\ngg\n\njpeg(file = \"../Plots/Q3_2.jpg\", width = image_size * 1.5, height = image_size)\ngg\ndev.off()\n\n###########################\n##### QUESTION 5 ##########\n###########################\n\n# Graph 1  \n###########################\n# Randomly sampled (bootstrapped) volatilities with fixed other parameters comparing black scholes and binomial absolute error to show they converge as dt approaches 0. \n\nAbs_diff <- bin_v_bs$Binomial - bin_v_bs$BlackScholes\n\ndiff_tall <- tidyr::gather(as.data.frame(Abs_diff), n, difference)\ndiff_tall$n <- stringr::str_extract(diff_tall$n, \"[0-9]\") %>% as.numeric\n\nt_left <- t_mat - bin_v_bs$option$date\ndat <- diff_tall %>% \n    group_by(n) %>% \n    summarise(mean = mean(difference), err = se(difference)) %>%\n    mutate(dt = t_left/n)\n\ngg <- ggplot(data = dat, aes(x = dt, y = mean)) +\n    geom_errorbar(aes(ymin = mean - 2*err, ymax = mean + 2*err), width = 1) +\n    xlab(\"dt (days)\") +\n    ylab(\"Binomial - Black Scholes approximation\") +\n    geom_hline(yintercept = 0, linetype = \"dashed\") +\n    ylim(-1,0.25) +\n    theme_few()\ngg\n\njpeg(file = \"../Plots/Q5_1.jpg\", width = image_size * 1.5, height = image_size)\ngg\ndev.off()\n\n# Graph 2\n###########################\n\ngg <- ggplot(dplyr::filter(tidy_data, putcall == \"Call\"), \n             aes(y = fOption_estimate)) + \n    geom_boxplot(aes(y = fOption_estimate - binom0.5, x = 2), outlier.size = .2) +\n    geom_boxplot(aes(y = fOption_estimate - binom0.1, x = 10), outlier.size = .2) +\n    geom_boxplot(aes(y = fOption_estimate - binom0.25, x = 4), outlier.size = .2) +\n    geom_boxplot(aes(y = fOption_estimate - binom0.125, x = 8), outlier.size = .2) +\n    xlab(\"dt (days)\") +\n    ylab(\"Black Scholes - Binomial option price\") +\n    geom_hline(yintercept = 0, linetype = \"dashed\") +\n    theme_few()\ngg\n    \njpeg(file = \"../Plots/Q5_2.jpg\", width = image_size * 1.5, height = image_size)\ngg\ndev.off()\n\n###########################\n##### QUESTION 6 ##########\n###########################\n\n# Graph 1\n###########################\n# Compare american vs European option prices using fOptions to show for each option american prices are always higher \n#100 * (binom1 - binom1_american)/binom1)\ndat <- dplyr::filter(tidy_data, putcall == \"Put\")\ngg <- ggplot(dat, aes(x = date, y = binom1_american - binom1)) + \n    facet_wrap(~id, nrow = 1) + \n    geom_line() +\n    ylab(\"Estimated American - European Option value\") +\n    theme_few() +\n    geom_hline(yintercept = 0, linetype = \"dashed\")\ngg\n\njpeg(file = \"../Plots/Q6_1.jpg\", width = image_size * 4, height = image_size)\ngg\ndev.off()",
    "created" : 1460504402542.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2152057817",
    "id" : "80F1D3C0",
    "lastKnownWriteTime" : 1460725754,
    "last_content_update" : 1460725758853,
    "path" : "~/Southampton/Term2/ComputationalFinance/CW2/Code/Graphs.R",
    "project_path" : "Graphs.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}